components:
  schemas:
    # Core Property Types
    propertyType:
      type: string
      enum: [apartment, house, villa, room]
      example: "apartment"
      description: Type of property

    propertyStatus:
      type: string
      enum: [active, inactive, maintenance]
      example: "active"
      description: Current status of the property

    # Property Value Objects
    propertyLocation:
      type: object
      properties:
        address:
          $ref: '../common/types.yaml#/components/schemas/address'
        coordinates:
          type: object
          properties:
            latitude:
              type: number
              minimum: -90
              maximum: 90
              example: 40.7128
            longitude:
              type: number
              minimum: -180
              maximum: 180
              example: -74.0060
          required:
            - latitude
            - longitude
      required:
        - address
        - coordinates

    propertyAmenities:
      type: object
      properties:
        basic:
          type: array
          items:
            type: string
            enum: [wifi, ac, heating, kitchen, tv, parking]
          example: ["wifi", "ac", "parking"]
        safety:
          type: array
          items:
            type: string
            enum: [smoke_alarm, fire_extinguisher, first_aid, security_system]
          example: ["smoke_alarm", "first_aid"]
        outdoor:
          type: array
          items:
            type: string
            enum: [pool, garden, bbq, terrace]
          example: ["pool", "garden"]

    propertyRules:
      type: object
      properties:
        checkInTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: "15:00"
        checkOutTime:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          example: "11:00"
        minNights:
          type: integer
          minimum: 1
          example: 2
        maxNights:
          type: integer
          minimum: 1
          example: 30
        instantBooking:
          type: boolean
          example: true
        allowPets:
          type: boolean
          example: false
        allowParties:
          type: boolean
          example: false
        additionalRules:
          type: array
          items:
            type: string
          example: ["No smoking", "Quiet hours after 10 PM"]
      required:
        - checkInTime
        - checkOutTime
        - minNights

    propertyPricing:
      type: object
      properties:
        basePrice:
          $ref: '../common/types.yaml#/components/schemas/money'
        cleaningFee:
          $ref: '../common/types.yaml#/components/schemas/money'
        securityDeposit:
          $ref: '../common/types.yaml#/components/schemas/money'
        taxes:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "VAT"
              rate:
                type: number
                minimum: 0
                maximum: 100
                example: 20
            required:
              - name
              - rate
      required:
        - basePrice

    # Property Aggregate
    property:
      type: object
      properties:
        id:
          $ref: '../common/types.yaml#/components/schemas/uuid'
        ownerId:
          $ref: '../common/types.yaml#/components/schemas/uuid'
        type:
          $ref: '#/components/schemas/propertyType'
        status:
          $ref: '#/components/schemas/propertyStatus'
        name:
          type: string
          minLength: 3
          maxLength: 100
          example: "Luxury Beach Villa"
        description:
          type: string
          maxLength: 2000
          example: "Beautiful beachfront villa with stunning ocean views"
        location:
          $ref: '#/components/schemas/propertyLocation'
        amenities:
          $ref: '#/components/schemas/propertyAmenities'
        rules:
          $ref: '#/components/schemas/propertyRules'
        pricing:
          $ref: '#/components/schemas/propertyPricing'
        metadata:
          $ref: '../common/types.yaml#/components/schemas/metadata'
        audit:
          $ref: '../common/types.yaml#/components/schemas/auditInfo'
      required:
        - id
        - ownerId
        - type
        - status
        - name
        - location
        - rules
        - pricing
        - audit 