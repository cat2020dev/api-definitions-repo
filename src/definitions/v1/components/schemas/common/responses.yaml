components:
  schemas:
    # Base Response Types
    baseResponse:
      type: object
      properties:
        status:
          type: string
          enum: [success, error]
          example: "success"
        meta:
          $ref: './types.yaml#/components/schemas/metadata'
      required:
        - status

    # Success Response Types
    successResponse:
      allOf:
        - $ref: '#/components/schemas/baseResponse'
        - type: object
          properties:
            status:
              enum: [success]
            data:
              type: object
              description: Response payload
          required:
            - data

    listResponse:
      allOf:
        - $ref: '#/components/schemas/successResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                type: object
            pagination:
              $ref: '#/components/schemas/paginationInfo'

    createdResponse:
      allOf:
        - $ref: '#/components/schemas/successResponse'
        - type: object
          properties:
            data:
              type: object
              required:
                - id
                - createdAt
              properties:
                id:
                  $ref: './types.yaml#/components/schemas/uuid'
                createdAt:
                  $ref: './types.yaml#/components/schemas/timestamp'

    # Pagination Info
    paginationInfo:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          example: 100
        page:
          type: integer
          minimum: 1
          example: 1
        limit:
          type: integer
          minimum: 1
          example: 20
        hasMore:
          type: boolean
          example: true
        links:
          type: object
          properties:
            self:
              type: string
              format: uri
              example: "/api/v1/resources?page=1&limit=20"
            first:
              type: string
              format: uri
              example: "/api/v1/resources?page=1&limit=20"
            prev:
              type: string
              format: uri
              nullable: true
              example: null
            next:
              type: string
              format: uri
              example: "/api/v1/resources?page=2&limit=20"
            last:
              type: string
              format: uri
              example: "/api/v1/resources?page=5&limit=20"
      required:
        - total
        - page
        - limit
        - hasMore

    # Error Response Types
    errorResponse:
      allOf:
        - $ref: '#/components/schemas/baseResponse'
        - type: object
          properties:
            status:
              enum: [error]
            error:
              type: object
              properties:
                code:
                  type: string
                  example: "VALIDATION_ERROR"
                message:
                  type: string
                  example: "Invalid input data"
                details:
                  type: array
                  items:
                    $ref: '#/components/schemas/errorDetail'
              required:
                - code
                - message
          required:
            - error

    errorDetail:
      type: object
      properties:
        field:
          type: string
          example: "email"
        message:
          type: string
          example: "Invalid email format"
      required:
        - field
        - message

    # Common Error Types
    validationError:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          properties:
            error:
              properties:
                code:
                  enum: [VALIDATION_ERROR]

    authenticationError:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          properties:
            error:
              properties:
                code:
                  enum: [AUTHENTICATION_ERROR]

    authorizationError:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          properties:
            error:
              properties:
                code:
                  enum: [AUTHORIZATION_ERROR]

    rateLimitError:
      allOf:
        - $ref: '#/components/schemas/errorResponse'
        - type: object
          properties:
            error:
              properties:
                code:
                  enum: [RATE_LIMIT_ERROR]
              x-headers:
                - x-rate-limit
                - x-rate-limit-remaining
                - x-rate-limit-reset


