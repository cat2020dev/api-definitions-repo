paths:
  # Online Booking Domain
  /online-booking/bookings:
    post:
      tags:
        - Bookings
      summary: Create a new booking
      description: Create a new booking in the system
      operationId: createBooking
      security:
        - bearerAuth: []
          apiKey: []
          oauth2: ['write']
      requestBody:
        required: true
        content:  
          application/json: 
            schema:
              $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/bookings/bookingRequest'
      responses:
        "201":
          description: Booking created successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/bookings/booking'
        "400":
          $ref: '../components/responses/index.yaml#/components/responses/errors/badRequest'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'
    get:
      tags:
        - Bookings
      summary: List all bookings
      description: Get all bookings for the authenticated user
      operationId: listBookings
      security:
        - bearerAuth: []
          apiKey: []
          oauth2: ['read']
      parameters:
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/page'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/limit'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/status'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/dateFrom'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/dateTo'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/sortBy'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/sortOrder'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/searchQuery'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/accept'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/acceptLanguage'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifNoneMatch'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifModifiedSince'
      responses:
        "200":
          description: List of bookings
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/index.yaml#/components/schemas/responses/listResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/bookings/booking'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'

  /online-booking/bookings/{booking-id}:
    parameters:
      - $ref: '../components/parameters/index.yaml#/components/parameters/path/booking-id'
    get:
      tags:
        - Bookings
      summary: Get booking details
      description: Get detailed information about a specific booking
      operationId: getBooking
      security:
        - bearerAuth: []
          apiKey: []
          oauth2: ['read']
      parameters:
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/accept'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/acceptLanguage'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifNoneMatch'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifModifiedSince'
      responses:
        "200":
          description: Booking details
          content:
            application/json:
              schema:
                $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/bookings/booking'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "404":
          $ref: '../components/responses/index.yaml#/components/responses/errors/notFound'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'
    put:
      tags:
        - Bookings
      summary: Update a booking
      description: Update an existing booking
      operationId: updateBooking
      security:
        - bearerAuth: []
          apiKey: []
          oauth2: ['write']
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/bookings/bookingRequest'
      responses:
        "200":
          description: Booking updated successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/bookings/booking'
        "400":
          $ref: '../components/responses/index.yaml#/components/responses/errors/badRequest'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "404":
          $ref: '../components/responses/index.yaml#/components/responses/errors/notFound'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'
    delete:
      tags:
        - Bookings
      summary: Delete a booking
      description: Delete an existing booking
      operationId: deleteBooking
      security:
        - bearerAuth: []
          apiKey: []
          oauth2: ['write']
      responses:
        "204":
          $ref: '../components/responses/index.yaml#/components/responses/success/noContent'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "404":
          $ref: '../components/responses/index.yaml#/components/responses/errors/notFound'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'

  /online-booking/properties:
    post:
      tags:
        - Properties
      summary: Create a new property
      description: Create a new property in the system
      operationId: createProperty
      security:
        - bearerAuth: []
          apiKey: []
          oauth2: ['write']
      requestBody:
        required: true
        content:  
          application/json: 
            schema:
              $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/properties/propertyRequest'
      responses:
        "201":
          description: Property created successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/properties/property'
        "400":
          $ref: '../components/responses/index.yaml#/components/responses/errors/badRequest'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'
    get:
      tags:
        - Properties
      summary: List all properties
      description: Get all properties for the authenticated user
      operationId: listProperties
      security:
        - bearerAuth: ['read']
          apiKey: []
      parameters:
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/page'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/limit'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/status'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/sortBy'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/sortOrder'
        - $ref: '../components/parameters/index.yaml#/components/parameters/query/searchQuery'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/accept'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/acceptLanguage'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifNoneMatch'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifModifiedSince'
      responses:
        "200":
          description: List of properties
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '../components/schemas/index.yaml#/components/schemas/responses/listResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/properties/property'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'

  /online-booking/properties/{property-id}:
    parameters:
      - $ref: '../components/parameters/index.yaml#/components/parameters/path/property-id'
    get:
      tags:
        - Properties
      summary: Get property details
      description: Get detailed information about a specific property
      operationId: getProperty
      security:
        - bearerAuth: ['read']
          apiKey: []
      parameters:
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/accept'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/acceptLanguage'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifNoneMatch'
        - $ref: '../components/parameters/index.yaml#/components/parameters/header/ifModifiedSince'
      responses:
        "200":
          description: Property details
          content:
            application/json:
              schema:
                $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/properties/property'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "404":
          $ref: '../components/responses/index.yaml#/components/responses/errors/notFound'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'
    put:
      tags:
        - Properties
      summary: Update a property
      description: Update an existing property
      operationId: updateProperty
      security:
        - bearerAuth: ['write']
          apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/properties/propertyRequest'
      responses:
        "200":
          description: Property updated successfully
          content:
            application/json:
              schema:
                $ref: '../components/schemas/index.yaml#/components/schemas/onlineBooking/properties/property'
        "400":
          $ref: '../components/responses/index.yaml#/components/responses/errors/badRequest'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "404":
          $ref: '../components/responses/index.yaml#/components/responses/errors/notFound'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError'
    delete:
      tags:
        - Properties
      summary: Delete a property
      description: Delete an existing property
      operationId: deleteProperty
      security:
        - bearerAuth: ['write']
          apiKey: []
      responses:
        "204":
          $ref: '../components/responses/index.yaml#/components/responses/success/noContent'
        "401":
          $ref: '../components/responses/index.yaml#/components/responses/errors/unauthorized'
        "403":
          $ref: '../components/responses/index.yaml#/components/responses/errors/forbidden'
        "404":
          $ref: '../components/responses/index.yaml#/components/responses/errors/notFound'
        "500":
          $ref: '../components/responses/index.yaml#/components/responses/errors/internalServerError' 